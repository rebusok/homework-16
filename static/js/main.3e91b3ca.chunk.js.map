{"version":3,"sources":["Components/c1-SuperInputText/SuperInputText.module.css","Components/c2-SuperButton/SuperButton.module.css","Components/c3-SuperCheckbox/SuperCheckbox.module.css","pages/Test/Test.module.scss","pages/EntNewPassword/EntNewPassword.tsx","pages/Error404/Error404.tsx","pages/Login/Login.tsx","pages/PasswordRecovery/PasswordRecovery.tsx","pages/Prrofile/Profile.tsx","pages/Registration/Registration.tsx","Components/c1-SuperInputText/SuperInputText.tsx","Components/c2-SuperButton/SuperButton.tsx","Components/c3-SuperCheckbox/SuperCheckbox.tsx","pages/Test/Test.tsx","Rroutes/Routes.tsx","Components/Header/Header.tsx","main/App.tsx","bll/store.ts","bll/testReducer.ts","index.tsx"],"names":["module","exports","EntNewPassword","Error404","Login","PasswordRecovery","Profile","Registration","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","placeholder","SuperButton","red","finalClassName","default","buttons","SuperCheckbox","onChangeChecked","children","checkbox_inp","checked","Test","useState","text","setText","setChecked","style","wrapped","PATH","Routes","path","exact","render","Header","to","App","reducers","combineReducers","test","state","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e91b3ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput___DF_R\",\"errorInput\":\"SuperInputText_errorInput__5kOfa\",\"error\":\"SuperInputText_error__1TRnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__XpD-X\",\"red\":\"SuperButton_red__3pTbn\",\"buttons\":\"SuperButton_buttons__3XQj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__1DrBr\",\"checkbox_inp\":\"SuperCheckbox_checkbox_inp__2B-oa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapped\":\"Test_wrapped__36pgI\"};","import React from 'react';\r\nimport style from './EntNewPassword.module.scss'\r\n\r\n\r\nconst EntNewPassword = () => {\r\n    return (\r\n        <div>\r\n            EntNewPassword\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EntNewPassword;","import React from 'react';\r\nimport style from './Error404.module.scss'\r\n\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div>\r\n            Error404\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error404;","import React from 'react';\r\nimport style from './Login.module.scss'\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport style from './PasswordRecovery.module.scss'\r\n\r\n\r\nconst PasswordRecovery = () => {\r\n    return (\r\n        <div>\r\n            PasswordRecovery\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordRecovery;","import React from 'react';\r\nimport style from './Profile.module.scss'\r\n\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            Prrofile\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport style from './Registration.module.scss'\r\n\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <div>\r\n            Registration\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error ? `${s.errorInput} ${className ? className : ''}` : `${s.superInput}`; // need to fix with\r\n    // (?:) and\r\n    // s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder='Name'\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.buttons}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.checkbox_inp}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {useState} from 'react';\r\nimport style from './Test.module.scss'\r\nimport SuperInputText from \"../../Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from '../../Components/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from \"../../Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport {ChangeEvent} from 'react';\r\n\r\n\r\nconst Test = () => {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    return (\r\n        <div className={style.wrapped}>\r\n            <SuperInputText\r\n                value={text}\r\n                onChangeText={setText}\r\n            />\r\n            <SuperButton>Test</SuperButton>\r\n            <div>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    {<span>test</span>}\r\n                </SuperCheckbox>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;","import React from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport EntNewPassword from \"../pages/EntNewPassword/EntNewPassword\";\r\nimport Error404 from \"../pages/Error404/Error404\";\r\nimport Login from \"../pages/Login/Login\";\r\nimport PasswordRecovery from \"../pages/PasswordRecovery/PasswordRecovery\";\r\nimport Profile from \"../pages/Prrofile/Profile\";\r\nimport Registration from \"../pages/Registration/Registration\";\r\nimport Test from \"../pages/Test/Test\";\r\n\r\n\r\nexport const PATH = {\r\n    ENT_NEW_PASSWORD: \"/new_password\",\r\n    LOGIN: '/login',\r\n    PASSWORD_REC: '/pass_rec',\r\n    PROFILE: '/profile',\r\n    REGISTRATION: '/registration',\r\n    TEST: '/test'\r\n}\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <h1>Hello</h1>}/>\r\n                <Route path={PATH.ENT_NEW_PASSWORD}  render={() => <EntNewPassword/>}/>\r\n                <Route path={PATH.LOGIN}  render={() => <Login/>}/>\r\n                <Route path={PATH.PASSWORD_REC}  render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.PROFILE}  render={() => <Profile/>}/>\r\n                <Route path={PATH.REGISTRATION}  render={() => <Registration/>}/>\r\n                <Route path={PATH.TEST}  render={() => <Test/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n             </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport  default Routes","import React from 'react';\r\nimport style from './Header.module.scss'\r\nimport {PATH} from \"../../Rroutes/Routes\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav>\r\n            <div >\r\n                <NavLink\r\n                    to={PATH.ENT_NEW_PASSWORD}\r\n\r\n                    >New Password</NavLink>\r\n                <NavLink\r\n                    to={PATH.REGISTRATION}\r\n\r\n                    >Registration</NavLink>\r\n                <NavLink\r\n                    to={PATH.PROFILE}\r\n\r\n                    >Profile</NavLink>\r\n                <NavLink\r\n                    to={PATH.PASSWORD_REC}\r\n\r\n                    >Password Recovery</NavLink>\r\n                <NavLink\r\n                    to={PATH.LOGIN}\r\n\r\n                >Login</NavLink>\r\n                <NavLink\r\n                    to={PATH.TEST}\r\n\r\n                >Test</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\n\nimport './App.css';\nimport Header from \"../Components/Header/Header\";\nimport Routes from \"../Rroutes/Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Header/>\n        <Routes/>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware } from \"redux\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {TestReducer} from \"./testReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    test:TestReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","export const TestReducer = (state:any = {}, action:any):any => {\r\n    switch (action.type) {\r\n        default: return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport {store} from './bll/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}